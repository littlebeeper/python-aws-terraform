<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="SELECTIVE" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="eb562dda-d207-456f-bf45-389750a0af7f" name="Changes" comment="">
      <change afterPath="$PROJECT_DIR$/backend/backend/api/params/__init__.py" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/backend/backend/command/account_create.py" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/backend/backend/db/accounts_db.py" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="DjangoConsoleOptions" custom-start-script="import sys; print('Python %s on %s' % (sys.version, sys.platform))&#10;import django; print('Django %s' % django.get_version())&#10;sys.path.extend([WORKING_DIR_AND_PYTHON_PATHS])&#10;if 'setup' in dir(django): django.setup()&#10;import django_manage_shell; django_manage_shell.run(PROJECT_ROOT)">
    <option name="myCustomStartScript" value="import sys; print('Python %s on %s' % (sys.version, sys.platform))&#10;import django; print('Django %s' % django.get_version())&#10;sys.path.extend([WORKING_DIR_AND_PYTHON_PATHS])&#10;if 'setup' in dir(django): django.setup()&#10;import django_manage_shell; django_manage_shell.run(PROJECT_ROOT)" />
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="Python Script" />
        <option value="Python Unit Test" />
      </list>
    </option>
  </component>
  <component name="FlaskConsoleOptions" custom-start-script="import sys&#10;sys.path.extend([WORKING_DIR_AND_PYTHON_PATHS])&#10;from flask.cli import ScriptInfo&#10;locals().update(ScriptInfo(create_app=None).load_app().make_shell_context())&#10;print(&quot;Python %s on %s\nApp: %s [%s]\nInstance: %s&quot; % (sys.version, sys.platform, app.import_name, app.env, app.instance_path))">
    <envs>
      <env key="FLASK_APP" value="app" />
    </envs>
    <option name="myCustomStartScript" value="import sys&#10;sys.path.extend([WORKING_DIR_AND_PYTHON_PATHS])&#10;from flask.cli import ScriptInfo&#10;locals().update(ScriptInfo(create_app=None).load_app().make_shell_context())&#10;print(&quot;Python %s on %s\nApp: %s [%s]\nInstance: %s&quot; % (sys.version, sys.platform, app.import_name, app.env, app.instance_path))" />
    <option name="myEnvs">
      <map>
        <entry key="FLASK_APP" value="app" />
      </map>
    </option>
  </component>
  <component name="Git.Settings">
    <branch-grouping />
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="HighlightingSettingsPerFile">
    <setting file="file://$USER_HOME$/.pyenv/versions/3.9.5/lib/python3.9/http/client.py" root0="SKIP_INSPECTION" />
    <setting file="file://$PROJECT_DIR$/output/test_user_seller_access.csv" root0="FORCE_HIGHLIGHTING" />
  </component>
  <component name="MarkdownSettingsMigration">
    <option name="stateVersion" value="1" />
  </component>
  <component name="NamedScopeManager">
    <order>
      <scope name="All Mogara Code" />
      <scope name="Backend / API" />
      <scope name="Frontend" />
      <scope name="Terraform" />
    </order>
  </component>
  <component name="ProjectColorInfo">{
  &quot;associatedIndex&quot;: 8
}</component>
  <component name="ProjectId" id="2AMib82l6K9KL4Mwv1ShfmgFBoq" />
  <component name="ProjectLevelVcsManager" settingsEditedManually="true" />
  <component name="ProjectViewState">
    <option name="autoscrollFromSource" value="true" />
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent">{
  &quot;keyToString&quot;: {
    &quot;ASKED_MARK_IGNORED_FILES_AS_EXCLUDED&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,
    &quot;TODO_SCOPE&quot;: &quot;All Places&quot;,
    &quot;WebServerToolWindowFactoryState&quot;: &quot;false&quot;,
    &quot;git-widget-placeholder&quot;: &quot;main&quot;,
    &quot;last_opened_file_path&quot;: &quot;/Users/jay/code/srv&quot;,
    &quot;node.js.detected.package.eslint&quot;: &quot;true&quot;,
    &quot;node.js.detected.package.tslint&quot;: &quot;true&quot;,
    &quot;node.js.selected.package.eslint&quot;: &quot;(autodetect)&quot;,
    &quot;node.js.selected.package.tslint&quot;: &quot;(autodetect)&quot;,
    &quot;nodejs_package_manager_path&quot;: &quot;yarn&quot;,
    &quot;prettierjs.PrettierConfiguration.Package&quot;: &quot;/Users/jay/code/srv/backend/backend/srv-fe/node_modules/prettier&quot;,
    &quot;run.code.analysis.last.selected.profile&quot;: &quot;aDefault&quot;,
    &quot;settings.editor.selected.configurable&quot;: &quot;com.jetbrains.python.configuration.PyActiveSdkModuleConfigurable&quot;,
    &quot;ts.external.directory.path&quot;: &quot;/Users/jay/code/srv/backend/backend/srv-fe/node_modules/typescript/lib&quot;,
    &quot;vue.rearranger.settings.migration&quot;: &quot;true&quot;
  }
}</component>
  <component name="RecentsManager">
    <key name="CopyFile.RECENT_KEYS">
      <recent name="$PROJECT_DIR$/output/development" />
      <recent name="$PROJECT_DIR$/backend" />
      <recent name="$PROJECT_DIR$/output/production" />
    </key>
    <key name="MoveFile.RECENT_KEYS">
      <recent name="$PROJECT_DIR$/backend/local_services" />
      <recent name="$PROJECT_DIR$/backend/backend/api/auth" />
      <recent name="$PROJECT_DIR$/backend/backend/api/propel_auth" />
      <recent name="$PROJECT_DIR$/backend/backend/scripts" />
      <recent name="$PROJECT_DIR$/backend/backend/scripts/capitalization_prototype" />
    </key>
  </component>
  <component name="RunManager" selected="Python tests.pytest for test_settings_api.SettingsApiTest.test_update_settings">
    <configuration name="convert_snippets_to_airtable_representation" type="PythonConfigurationType" factoryName="Python" nameIsGenerated="true">
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <envs>
        <env name="PYTHONUNBUFFERED" value="1" />
      </envs>
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="" />
      <option name="IS_MODULE_SDK" value="true" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <module name="" />
      <EXTENSION ID="PythonCoverageRunConfigurationExtension" runner="coverage.py" />
      <option name="SCRIPT_NAME" value="" />
      <option name="PARAMETERS" value="--account acct_6ed055b13ece40f0a223b269003d54da" />
      <option name="SHOW_COMMAND_LINE" value="false" />
      <option name="EMULATE_TERMINAL" value="false" />
      <option name="MODULE_MODE" value="false" />
      <option name="REDIRECT_INPUT" value="false" />
      <option name="INPUT_FILE" value="" />
      <method v="2" />
    </configuration>
    <configuration name="find_and_group_clips" type="PythonConfigurationType" factoryName="Python" nameIsGenerated="true">
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <envs>
        <env name="PYTHONUNBUFFERED" value="1" />
      </envs>
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="" />
      <option name="IS_MODULE_SDK" value="true" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <module name="" />
      <EXTENSION ID="PythonCoverageRunConfigurationExtension" runner="coverage.py" />
      <option name="SCRIPT_NAME" value="" />
      <option name="PARAMETERS" value="--env qa --account acct_3c242d266f364cc38d703f4ddcab7a79 -rtc" />
      <option name="SHOW_COMMAND_LINE" value="false" />
      <option name="EMULATE_TERMINAL" value="true" />
      <option name="MODULE_MODE" value="false" />
      <option name="REDIRECT_INPUT" value="false" />
      <option name="INPUT_FILE" value="" />
      <method v="2" />
    </configuration>
    <configuration name="pipeline" type="PythonConfigurationType" factoryName="Python" nameIsGenerated="true">
      <module name="backend" />
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <envs>
        <env name="PYTHONUNBUFFERED" value="1" />
      </envs>
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$/backend" />
      <option name="IS_MODULE_SDK" value="true" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <EXTENSION ID="PythonCoverageRunConfigurationExtension" runner="coverage.py" />
      <option name="SCRIPT_NAME" value="$PROJECT_DIR$/backend/backend/scripts/capitalization_prototype/pipeline.py" />
      <option name="PARAMETERS" value="--env qa --run-id demo --start-date 2023-01-01 --account-id acct_6ed055b13ece40f0a223b269003d54da  --github-token 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 --debug" />
      <option name="SHOW_COMMAND_LINE" value="false" />
      <option name="EMULATE_TERMINAL" value="false" />
      <option name="MODULE_MODE" value="false" />
      <option name="REDIRECT_INPUT" value="false" />
      <option name="INPUT_FILE" value="" />
      <method v="2" />
    </configuration>
    <configuration name="server_config" type="PythonConfigurationType" factoryName="Python">
      <module name="backend" />
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <envs>
        <env name="PYTHONUNBUFFERED" value="1  SRV_ENV=test" />
      </envs>
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$/backend/backend" />
      <option name="IS_MODULE_SDK" value="true" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <EXTENSION ID="PythonCoverageRunConfigurationExtension" runner="coverage.py" />
      <option name="SCRIPT_NAME" value="$PROJECT_DIR$/backend/backend/config.py" />
      <option name="PARAMETERS" value="" />
      <option name="SHOW_COMMAND_LINE" value="false" />
      <option name="EMULATE_TERMINAL" value="false" />
      <option name="MODULE_MODE" value="false" />
      <option name="REDIRECT_INPUT" value="false" />
      <option name="INPUT_FILE" value="" />
      <method v="2" />
    </configuration>
    <configuration name="Python tests for test_api.ApiTest" type="tests" factoryName="Autodetect" temporary="true" nameIsGenerated="true">
      <module name="backend" />
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$/backend/tests/api" />
      <option name="IS_MODULE_SDK" value="true" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <EXTENSION ID="PythonCoverageRunConfigurationExtension" runner="coverage.py" />
      <option name="_new_additionalArguments" value="&quot;&quot;" />
      <option name="_new_target" value="&quot;test_api.ApiTest&quot;" />
      <option name="_new_targetType" value="&quot;PYTHON&quot;" />
      <method v="2" />
    </configuration>
    <configuration name="Python tests for test_api.ApiTest.test_ping_works" type="tests" factoryName="Autodetect" temporary="true" nameIsGenerated="true">
      <module name="backend" />
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$/backend/tests/api" />
      <option name="IS_MODULE_SDK" value="true" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <EXTENSION ID="PythonCoverageRunConfigurationExtension" runner="coverage.py" />
      <option name="_new_additionalArguments" value="&quot;&quot;" />
      <option name="_new_target" value="&quot;test_api.ApiTest.test_ping_works&quot;" />
      <option name="_new_targetType" value="&quot;PYTHON&quot;" />
      <method v="2" />
    </configuration>
    <configuration name="Python tests for test_api.ApiTest.test_session_works" type="tests" factoryName="Autodetect" temporary="true" nameIsGenerated="true">
      <module name="backend" />
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$/backend/tests/api" />
      <option name="IS_MODULE_SDK" value="true" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <EXTENSION ID="PythonCoverageRunConfigurationExtension" runner="coverage.py" />
      <option name="_new_additionalArguments" value="&quot;&quot;" />
      <option name="_new_target" value="&quot;test_api.ApiTest.test_session_works&quot;" />
      <option name="_new_targetType" value="&quot;PYTHON&quot;" />
      <method v="2" />
    </configuration>
    <configuration name="Python tests for test_settings_api.SettingsApiTest" type="tests" factoryName="Autodetect" temporary="true" nameIsGenerated="true">
      <module name="backend" />
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$/backend/tests/api" />
      <option name="IS_MODULE_SDK" value="true" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <EXTENSION ID="PythonCoverageRunConfigurationExtension" runner="coverage.py" />
      <option name="_new_additionalArguments" value="&quot;&quot;" />
      <option name="_new_target" value="&quot;test_settings_api.SettingsApiTest&quot;" />
      <option name="_new_targetType" value="&quot;PYTHON&quot;" />
      <method v="2" />
    </configuration>
    <configuration name="pytest for test_settings_api.SettingsApiTest.test_update_settings" type="tests" factoryName="py.test" temporary="true" nameIsGenerated="true">
      <module name="backend" />
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <option name="SDK_HOME" value="$PROJECT_DIR$/backend/.venv/bin/python" />
      <option name="SDK_NAME" value="Poetry (backend)" />
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$/backend/tests/api" />
      <option name="IS_MODULE_SDK" value="true" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <EXTENSION ID="PythonCoverageRunConfigurationExtension" runner="coverage.py" />
      <option name="_new_keywords" value="&quot;&quot;" />
      <option name="_new_parameters" value="&quot;&quot;" />
      <option name="_new_additionalArguments" value="&quot;&quot;" />
      <option name="_new_target" value="&quot;test_settings_api.SettingsApiTest.test_update_settings&quot;" />
      <option name="_new_targetType" value="&quot;PYTHON&quot;" />
      <method v="2" />
    </configuration>
    <recent_temporary>
      <list>
        <item itemvalue="Python tests.pytest for test_settings_api.SettingsApiTest.test_update_settings" />
        <item itemvalue="Python tests.Python tests for test_settings_api.SettingsApiTest" />
        <item itemvalue="Python tests.Python tests for test_api.ApiTest.test_session_works" />
        <item itemvalue="Python tests.Python tests for test_api.ApiTest.test_ping_works" />
        <item itemvalue="Python tests.Python tests for test_api.ApiTest" />
      </list>
    </recent_temporary>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="eb562dda-d207-456f-bf45-389750a0af7f" name="Changes" comment="" />
      <created>1654825924405</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1654825924405</updated>
      <workItem from="1681697772992" duration="27670000" />
      <workItem from="1681789122736" duration="16382000" />
      <workItem from="1682392180239" duration="5724000" />
      <workItem from="1682403226713" duration="10801000" />
      <workItem from="1682541565711" duration="695000" />
      <workItem from="1690304189718" duration="2369000" />
      <workItem from="1690949939516" duration="58527000" />
      <workItem from="1696352413649" duration="2991000" />
      <workItem from="1696356546787" duration="4167000" />
      <workItem from="1696367815212" duration="7654000" />
    </task>
    <servers />
  </component>
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
  <component name="UnknownFeatures">
    <option featureType="com.intellij.fileTypeFactory" implementationName="Dockerfile" />
  </component>
  <component name="Vcs.Log.Tabs.Properties">
    <option name="TAB_STATES">
      <map>
        <entry key="7d52b05e-4f3a-4d19-a94e-4603633f4c15">
          <value>
            <State />
          </value>
        </entry>
        <entry key="MAIN">
          <value>
            <State>
              <option name="CUSTOM_BOOLEAN_PROPERTIES">
                <map>
                  <entry key="Show.Git.Branches" value="false" />
                </map>
              </option>
              <option name="FILTERS">
                <map>
                  <entry key="branch">
                    <value>
                      <list>
                        <option value="jg-perplexity-score" />
                      </list>
                    </value>
                  </entry>
                </map>
              </option>
            </State>
          </value>
        </entry>
      </map>
    </option>
  </component>
  <component name="VcsManagerConfiguration">
    <ignored-roots>
      <path value="$PROJECT_DIR$/lolol/getting-started" />
    </ignored-roots>
  </component>
  <component name="XDebuggerManager">
    <breakpoint-manager>
      <breakpoints>
        <line-breakpoint enabled="true" suspend="THREAD" type="python-line">
          <url>file://$PROJECT_DIR$/backend/tests/api/test_settings_api.py</url>
          <line>22</line>
          <option name="timeStamp" value="8" />
        </line-breakpoint>
      </breakpoints>
    </breakpoint-manager>
  </component>
  <component name="com.intellij.coverage.CoverageDataManagerImpl">
    <SUITE FILE_PATH="coverage/mogara$pytest_for_api_test_projects_api.coverage" NAME="pytest for api.test_projects_api Coverage Results" MODIFIED="1682628240891" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/mogara_server/tests" />
    <SUITE FILE_PATH="coverage/srv$pytest_for_test_settings_api_SettingsApiTest_test_update_settings.coverage" NAME="pytest for test_settings_api.SettingsApiTest.test_update_settings Coverage Results" MODIFIED="1696450977480" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/backend/tests/api" />
    <SUITE FILE_PATH="coverage/mogara$try_out_threading.coverage" NAME="try_out_threading Coverage Results" MODIFIED="1682007488112" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/mogara_server/mogara_server/scripts/capitalization_prototype" />
    <SUITE FILE_PATH="coverage/srv-fe$pickle_cache.coverage" NAME="pickle_cache Coverage Results" MODIFIED="1681937315023" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/srv-fe_server/srv-fe_server/scripts/capitalization_prototype" />
    <SUITE FILE_PATH="coverage/mogara$.coverage" NAME=" Coverage Results" MODIFIED="1690326704709" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/mogara_server/tests/api" />
    <SUITE FILE_PATH="coverage/mogara$pytest_for_test_accounting_periods_TestModels_test_accounting_periods_quarter_exact_match.coverage" NAME="pytest for test_accounting_periods.TestModels.test_accounting_periods_quarter_exact_match Coverage Results" MODIFIED="1690235446920" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/mogara_server/tests" />
    <SUITE FILE_PATH="coverage/srv-fe$try_out_threading.coverage" NAME="try_out_threading Coverage Results" MODIFIED="1682007488112" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/srv-fe_server/srv-fe_server/scripts/capitalization_prototype" />
    <SUITE FILE_PATH="coverage/srv-fe$.coverage" NAME=" Coverage Results" MODIFIED="1690326704709" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/srv-fe_server/tests/api" />
    <SUITE FILE_PATH="coverage/mogara$pytest_for_test_projects_api_ProjectsApiTest_test_create_manual_task.coverage" NAME="pytest for test_projects_api.ProjectsApiTest.test_create_manual_task Coverage Results" MODIFIED="1682628000329" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/mogara_server/tests/api" />
    <SUITE FILE_PATH="coverage/srv-fe$pytest_for_test_projects_api_ProjectsApiTest_test_create_manual_task.coverage" NAME="pytest for test_projects_api.ProjectsApiTest.test_create_manual_task Coverage Results" MODIFIED="1682628000329" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/srv-fe_server/tests/api" />
    <SUITE FILE_PATH="coverage/srv-fe$pytest_for_api_test_projects_api.coverage" NAME="pytest for api.test_projects_api Coverage Results" MODIFIED="1682628240891" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/srv-fe_server/tests" />
    <SUITE FILE_PATH="coverage/srv$.coverage" NAME=" Coverage Results" MODIFIED="1696451032683" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/backend/tests/api" />
    <SUITE FILE_PATH="coverage/srv-fe$try_out_github_pr_ids.coverage" NAME="try_out_github_pr_ids Coverage Results" MODIFIED="1682029211519" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/srv-fe_server/srv-fe_server/scripts/capitalization_prototype" />
    <SUITE FILE_PATH="coverage/srv-fe$pytest_for_test_accounting_periods_TestModels_test_accounting_periods_quarter_exact_match.coverage" NAME="pytest for test_accounting_periods.TestModels.test_accounting_periods_quarter_exact_match Coverage Results" MODIFIED="1690235446920" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/srv-fe_server/tests" />
    <SUITE FILE_PATH="coverage/srv-fe$benchmark_bookend_finder.coverage" NAME="benchmark_bookend_finder Coverage Results" MODIFIED="1681858235487" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/srv-fe_server/srv-fe_server/scripts/capitalization_prototype" />
    <SUITE FILE_PATH="coverage/mogara$pipeline.coverage" NAME="pipeline Coverage Results" MODIFIED="1683000467954" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/mogara_server" />
    <SUITE FILE_PATH="coverage/mogara$try_out_github_pr_ids.coverage" NAME="try_out_github_pr_ids Coverage Results" MODIFIED="1682029211519" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/mogara_server/mogara_server/scripts/capitalization_prototype" />
    <SUITE FILE_PATH="coverage/mogara$benchmark_bookend_finder.coverage" NAME="benchmark_bookend_finder Coverage Results" MODIFIED="1681858235487" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/mogara_server/mogara_server/scripts/capitalization_prototype" />
    <SUITE FILE_PATH="coverage/srv-fe$pipeline.coverage" NAME="pipeline Coverage Results" MODIFIED="1683000467954" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/srv-fe_server" />
    <SUITE FILE_PATH="coverage/mogara$pickle_cache.coverage" NAME="pickle_cache Coverage Results" MODIFIED="1681937315023" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/mogara_server/mogara_server/scripts/capitalization_prototype" />
  </component>
</project>