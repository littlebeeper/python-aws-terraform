version: '3.9'

services:
  mongo:
    restart: on-failure
    container_name: mongo
    build:
      context: .
      dockerfile: local_mongo.Dockerfile
    ports:
      - 27017:27017
    healthcheck:
      test: |
        test $$(mongo --quiet -u admin_user -p mongo --eval 'try { rs.initiate({ _id: "rs0", members: [{ _id: 0, host: "mongo:27017" }] }).ok } catch (_) { rs.status().ok; }') -eq 0
      interval: 10s
      start_period: 5s
    environment:
      - MONGO_INITDB_ROOT_USERNAME=admin_user
      - MONGO_INITDB_ROOT_PASSWORD=mongo
      - MONGO_INITDB_DATABASE=admin
  web:
    restart: on-failure
    container_name: web
    build:
      context: ../
      dockerfile: fargate.Dockerfile
    command: uvicorn backend.backend_fargate:app --host 0.0.0.0 --port 5001 --reload
    ports:
      - 5001:5001
    env_file:
      - ../.env.development
    environment:
      - DB_HOST=mongo
      - CELERY_BROKER_URL=redis://redis:6379/0
    volumes:
      - ../backend:/app/backend
      # aws keys
      - ~/.aws:/root/.aws
    depends_on:
      - mongo

  live-reloader-web:
    image: jgokhale/livereloading
    container_name: livereloader-web
    privileged: true
    environment:
      - RELOAD_DELAY=1.5               # seconds
      - RELOAD_CONTAINER=web           # container name
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ../backend:/app/backend

  redis:
    image: redis
    restart: on-failure
    ports:
      - 6379:6379

  celery-worker:
    restart: on-failure
    container_name: celery-worker
    build:
      context: ../
      dockerfile: fargate.Dockerfile
    command: celery -A backend.celery_worker.celery_app worker --loglevel=DEBUG # --uid myuser (can't use --uid because non-root user can't see mounted credentials)
    env_file:
      - ../.env.development
    environment:
      - CELERY_BROKER_URL=redis://redis:6379/0
      - DB_HOST=mongo
    volumes:
      # aws keys
      - ~/.aws:/root/.aws
      - ../backend:/app/backend
    depends_on:
      - redis
  live-reloader-celery-worker:
    image: jgokhale/livereloading
    container_name: livereloader-celery-worker
    privileged: true
    environment:
      - RELOAD_DELAY=1.5               # seconds
      - RELOAD_CONTAINER=celery-worker # container name
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ../backend:/app/backend

  celery-flower-monitor:
    restart: on-failure
    build:
      context: ../
      dockerfile: fargate.Dockerfile
    command: celery --broker redis://redis:6379/0 -A backend.celery_worker.celery_app flower
    ports:
      - 5555:5555
    depends_on:
      - celery-worker
